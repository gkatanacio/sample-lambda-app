// Code generated by mockery (devel). DO NOT EDIT.

package movie

import (
	movie "github.com/gkatanacio/sample-lambda-app/pkg/movie"
	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CreateMovie provides a mock function with given fields: _a0
func (_m *Repository) CreateMovie(_a0 movie.Movie) (*movie.Movie, error) {
	ret := _m.Called(_a0)

	var r0 *movie.Movie
	if rf, ok := ret.Get(0).(func(movie.Movie) *movie.Movie); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*movie.Movie)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(movie.Movie) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMovie provides a mock function with given fields: id
func (_m *Repository) GetMovie(id uuid.UUID) (*movie.Movie, error) {
	ret := _m.Called(id)

	var r0 *movie.Movie
	if rf, ok := ret.Get(0).(func(uuid.UUID) *movie.Movie); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*movie.Movie)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
